{"name":"AMBTableViewController","tagline":"Storyboard and Prototype Cells-centric block-based UITableView controller to manage complex layouts.","body":"\r\n[![Platform: iOS](https://img.shields.io/cocoapods/p/AMBTableViewController.svg?style=flat)](http://cocoadocs.org/docsets/AMBTableViewController/)\r\n[![Version: 1.0.0](https://img.shields.io/cocoapods/v/AMBTableViewController.svg?style=flat)](http://cocoadocs.org/docsets/AMBTableViewController/)\r\n[![License: Apache 2.0](https://img.shields.io/cocoapods/l/AMBTableViewController.svg?style=flat)](http://cocoadocs.org/docsets/AMBTableViewController/)\r\n[![Dependency Status](https://www.versioneye.com/objective-c/AMBTableViewController/badge.svg?style=flat)](https://www.versioneye.com/objective-c/AMBTableViewController)\r\n[![Build Status](http://img.shields.io/travis/CyberAgent/AMBTableViewController/master.svg?style=flat)](https://travis-ci.org/CyberAgent/AMBTableViewController)\r\n\r\n_Developed as part of [Pecolly iOS](https://itunes.apple.com/us/app/pecolly-cooking-community/id544605228?mt=8)._\r\n\r\n## Demo\r\n\r\nA demo project is [included](Demo) in the repository.\r\n\r\n## Features\r\n\r\n - Use Storyboards' Prototype Cells to design your cells.\r\n - Separate table code with [`AMBTableViewSection`](Source/AMBTableViewController.h#L149)'s.\r\n - Use blocks instead of delegate calls and avoid having section code separated through multiple methods.\r\n - Individual hide/shown, add/remove sections and rows.\r\n - Support for dynamic height cells.\r\n - Support for special \"No Content Cell\"'s for empty sections.\r\n\r\n![Screenshot 1](http://cyberagent.github.io/AMBTableViewController/images/screenshot1.png)ã€€![Screenshot 2](http://cyberagent.github.io/AMBTableViewController/images/screenshot2.png)\r\n\r\n## Installation\r\n\r\nAdd the following to your [CocoaPods](http://cocoapods.org)' [Podfile](http://guides.cocoapods.org/syntax/podfile.html):\r\n\r\n```ruby\r\nplatform :ios, '5.0'\r\n\r\npod 'AMBTableViewController'\r\n```\r\n\r\n## Documentation\r\n\r\nhttp://cocoadocs.org/docsets/AMBTableViewController/\r\n\r\n## Sample Code\r\n\r\nPart of the included [demo project](Demo/TableDemo/PEPhotosDetailViewController.m#L24).\r\n\r\n### Creating and configuring sections\r\n\r\nA section with a single \"static\" cell of custom height:\r\n\r\n```obj-c\r\nfooterSection = [AMBTableViewSection\r\n                 sectionWithObjects:@[[AMBCellIdentifier identifierFromString:@\"footer\"]]\r\n                 sectionUpdateBlock:NULL\r\n                 cellHeightBlock:^CGFloat(id object, NSIndexPath * indexPath) { return 120.0; }\r\n                 cellIdentifierBlock:NULL\r\n                 cellConfigurationBlock:NULL];\r\n```\r\n\r\nA section with a single \"static\" cell hidden when post is `nil`:\r\n\r\n```obj-c\r\nwriteSection = [AMBTableViewSection\r\n                sectionWithObjects:@[[AMBCellIdentifier identifierFromString:@\"write_comment\"]]\r\n                sectionUpdateBlock:^(AMBTableViewSection * section)\r\n                {\r\n                    section.hidden = (weakSelf.post == nil);\r\n                }\r\n                cellHeightBlock:NULL\r\n                cellIdentifierBlock:NULL\r\n                cellConfigurationBlock:NULL];\r\n```\r\n\r\nA section with a single row of one of two kinds:\r\n\r\n```obj-c\r\nauthorSection = [AMBTableViewSection\r\n                 sectionWithObjects:@[@\"author_cell\"]\r\n                 sectionUpdateBlock:^(AMBTableViewSection * section)\r\n                 {\r\n                     [section reloadObjectAtIndex:0];\r\n                 }\r\n                 cellHeightBlock:NULL\r\n                 cellIdentifierBlock:^NSString *(id object, NSIndexPath *indexPath)\r\n                 {\r\n                     BOOL ownPost = [weakSelf.post.authorName isEqualToString:@\"Me\"];\r\n                     return ownPost ? @\"author_self\" : @\"author_other\";\r\n                 }\r\n                 cellConfigurationBlock:^(id object,\r\n                                          UITableViewCell * cell,\r\n                                          NSIndexPath * indexPath)\r\n                 {\r\n                     PEPhotosDetailAuthorCell * authorCell = (PEPhotosDetailAuthorCell *)cell;\r\n                     authorCell.authorLabel.text = weakSelf.post.authorName;\r\n                 }],\r\n```\r\n\r\nA section with hideable cells:\r\n\r\n```obj-c\r\nNSArray * sectionObjects = @[[AMBCellIdentifier identifierFromString:@\"title\"],   // 0\r\n                             [AMBCellIdentifier identifierFromString:@\"image\"],   // 1\r\n                             [AMBCellIdentifier identifierFromString:@\"tags\"],    // 2\r\n                             [AMBCellIdentifier identifierFromString:@\"recipe\"]]; // 3\r\ntopSection = [AMBTableViewSection\r\n              sectionWithObjects:sectionObjects\r\n              sectionUpdateBlock:^(AMBTableViewSection *section)\r\n              {\r\n                  [section reloadObjectAtIndex:0];\r\n              }\r\n              cellHeightBlock:^CGFloat(id object,\r\n                                       NSIndexPath * indexPath)\r\n              {\r\n                  switch ([sectionObjects indexOfObject:object]) // Shouldn't use indexPath.row because we hide/show rows\r\n                  {\r\n                      case 0:\r\n                          return 40.0;\r\n                      case 1:\r\n                          return 160.0;\r\n                      case 3:\r\n                          return 170.0;\r\n                      default:\r\n                          return -1.0; // Table view's default height\r\n                  }\r\n              }\r\n              cellIdentifierBlock:NULL\r\n              cellConfigurationBlock:^(id object,\r\n                                       UITableViewCell * cell,\r\n                                       NSIndexPath * indexPath)\r\n              {\r\n                  switch ([sectionObjects indexOfObject:object]) // Shouldn't use indexPath.row because we hide/show rows\r\n                  {\r\n                      case 0:\r\n                      {\r\n                          PEPhotosDetailTitleCell * titleCell = (PEPhotosDetailTitleCell *)cell;\r\n                          titleCell.titleLabel.text = weakSelf.post.title;\r\n                          break;\r\n                      }\r\n                      case 1:\r\n                      {\r\n                          //PEPhotosDetailImageCell * imageCell = (PEPhotosDetailImageCell *)cell;\r\n                          break;\r\n                      }\r\n                  }\r\n              }];\r\n\r\n// Initial state\r\n[topSection setObjectsAtIndexes:[NSIndexSet indexSetWithIndexesInRange:NSMakeRange(2, 2)]\r\n                         hidden:YES];\r\n```\r\n\r\nA section with a dynamic number of cells of dynamic height and a special \"no content cell\":\r\n\r\n```obj-c\r\ncommentsSection = [AMBTableViewSection\r\n                   sectionWithObjects:@[[AMBCellIdentifier identifierFromString:@\"loading_comments\"]]\r\n                   sectionUpdateBlock:NULL\r\n                   cellHeightBlock:^CGFloat(id object,\r\n                                            NSIndexPath * indexPath)\r\n                   {\r\n                       if ([object isKindOfClass:[AMBCellIdentifier class]])\r\n                       {\r\n                           return -1.0; // Loading comments (default height)\r\n                       }\r\n                       if (!object)\r\n                       {\r\n                           return 88.0; // No content cell\r\n                       }\r\n                       \r\n                       // Dynamic height comments\r\n                       return [weakSelf heightForCellWithIdentifier:@\"comment\"\r\n                                                               text:object\r\n                                             limitedToNumberOfLines:0];\r\n                   }\r\n                   cellIdentifierBlock:^NSString *(id object,\r\n                                                   NSIndexPath * indexPath)\r\n                   {\r\n                       return (object ? @\"comment\" : // A comment\r\n                               @\"no_comments\");      // No content cell\r\n                   }\r\n                   cellConfigurationBlock:^(id object,\r\n                                            UITableViewCell * cell,\r\n                                            NSIndexPath * indexPath)\r\n                   {\r\n                       if ([cell isKindOfClass:[PEPhotosDetailCommentCell class]] &&\r\n                           [object isKindOfClass:[NSString class]])\r\n                       {\r\n                           ((PEPhotosDetailCommentCell *)cell).bodyLabel.text = (NSString *)object;\r\n                       }\r\n                   }];\r\n\r\n// Enable \"no content cell\"\r\ncommentsSection.presentsNoContentCell = YES;\r\n```\r\n\r\n### Configuring the initial table configuration\r\n\r\n```obj-c\r\ntableViewController.sections = @[topSection,\r\n                                 authorSection,\r\n                                 writeSection,\r\n                                 commentsSection,\r\n                                 footerSection];\r\n```\r\n\r\n### Updating the table\r\n\r\nUpdating all sections:\r\n\r\n```obj-c\r\n- (void)setPost:(PEPost *)post\r\n{\r\n    _post = post;\r\n    \r\n    [self updateAllSections];\r\n}\r\n```\r\n\r\nToggling rows:\r\n\r\n```obj-c\r\n- (IBAction)toggleDetails:(id)sender\r\n{\r\n    // Hide if all hiddeable rows are hidden, show all otherwise\r\n    [topSection setObjectsAtIndexes:[NSIndexSet indexSetWithIndexesInRange:NSMakeRange(1, 3)]\r\n                             hidden:(![topSection isObjectAtIndexHidden:1] &&\r\n                                     ![topSection isObjectAtIndexHidden:2] &&\r\n                                     ![topSection isObjectAtIndexHidden:3])];\r\n}\r\n\r\n```\r\n\r\n## License\r\n\r\n    Copyright 2014 CyberAgent Inc.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n        http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n","google":"UA-40888254-6","note":"Don't delete this file! It's used internally to help with page regeneration."}